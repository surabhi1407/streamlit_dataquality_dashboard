steps:
  # Build the docker image
  - name: gcr.io/cloud-builders/docker
    args:
      - build
      - '--no-cache'
      - '--platform'
      - linux/amd64
      - '-t'
      - '$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA'
      - .
      - '-f'
      - Dockerfile
    id: Build
  # Push the docker image to the container registry
  - name: gcr.io/cloud-builders/docker
    args:
      - push
      - '$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA'
    id: Push
  # Update the cloud run service to use the new image
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    args:
      - run
      - services
      - update
      - $_SERVICE_NAME
      - '--platform=managed'
      - '--image=$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA'
      - >-
        --labels=managed-by=gcp-cloud-build-deploy-cloud-run,commit-sha=$COMMIT_SHA,gcb-build-id=$BUILD_ID
      - '--region=$_DEPLOY_REGION'
      - '--port'
      - '8501'
      - '--quiet'
    id: Deploy
    entrypoint: gcloud

images:
  - '$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA'
options:
  substitutionOption: ALLOW_LOOSE
substitutions:
  _PLATFORM: managed
  _DEPLOY_REGION: us-central1
  _SERVICE_NAME: streamlit-dataquality-dashboard
  _GCR_HOSTNAME: us.gcr.io


